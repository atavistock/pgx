/* 
This file is auto generated by pgx.

The ordering of items is not stable, it is driven by a dependency graph.
*/

-- src/lib.rs:38
-- bootstrap

CREATE TABLE extension_sql (message TEXT);
INSERT INTO extension_sql VALUES ('bootstrap');


-- src/lib.rs:18
-- custom_sql::home::Ball
CREATE TYPE Ball;

-- src/lib.rs:18
-- custom_sql::home::ball_in
CREATE OR REPLACE FUNCTION "ball_in"(
	"input" cstring /* &std::ffi::c_str::CStr */
) RETURNS Ball /* custom_sql::home::Ball */
IMMUTABLE PARALLEL SAFE STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'ball_in_wrapper';

-- src/lib.rs:18
-- custom_sql::home::ball_out
CREATE OR REPLACE FUNCTION "ball_out"(
	"input" Ball /* custom_sql::home::Ball */
) RETURNS cstring /* &std::ffi::c_str::CStr */
IMMUTABLE PARALLEL SAFE STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'ball_out_wrapper';

-- src/lib.rs:18
-- custom_sql::home::Ball
CREATE TYPE Ball (
	INTERNALLENGTH = variable,
	INPUT = ball_in, /* custom_sql::home::ball_in */
	OUTPUT = ball_out, /* custom_sql::home::ball_out */
	STORAGE = extended
);

-- src/lib.rs:12
-- custom_sql::home::Dog
CREATE TYPE Dog AS ENUM (
	'Brandy',
	'Nami'
);

-- src/lib.rs:70
CREATE SCHEMA IF NOT EXISTS tests; /* custom_sql::tests */

-- src/lib.rs:74
-- custom_sql::tests::test_ordering
CREATE OR REPLACE FUNCTION tests."test_ordering"() RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'test_ordering_wrapper';

-- src/lib.rs:46


        INSERT INTO extension_sql VALUES ('single_raw');


-- src/lib.rs:62
-- requires:
--   single_raw

INSERT INTO extension_sql VALUES ('single');


-- src/lib.rs:52
-- requires:
--   Dog
--   home::Ball
--   single_raw
--   single


INSERT INTO extension_sql VALUES ('multiple_raw');


-- src/lib.rs:63
-- requires:
--   Dog
--   home::Ball
--   single_raw
--   single
--   multiple_raw

INSERT INTO extension_sql VALUES ('multiple');


-- src/lib.rs:67
-- finalize
INSERT INTO extension_sql VALUES ('finalizer');

